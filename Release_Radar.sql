CREATE TABLE "Users" (
  "UserID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Username" varchar UNIQUE NOT NULL,
  "PasswordHash" varchar NOT NULL,
  "Email" varchar UNIQUE NOT NULL,
  "FaName" varchar,
  "EnName" varchar,
  "FaLastName" varchar,
  "EnLastName" varchar,
  "DisplayName" varchar,
  "RoleID" integer,
  "ProfileImageID" integer,
  "Phone" varchar,
  "LastLogin" datetime,
  "LastPasswordChange" datetime,
  "FailedLoginAttempts" integer DEFAULT 0,
  "TimeZone" varchar,
  "LanguagePreference" varchar,
  "TwoFactorEnabled" boolean DEFAULT false,
  "LastIPAddress" varchar,
  "DepartmentID" integer,
  "IsActive" boolean DEFAULT true,
  "IsLocked" boolean DEFAULT false,
  "IsArchived" boolean DEFAULT false,
  "CreatedAt" datetime DEFAULT (now()),
  "UpdatedAt" datetime DEFAULT (now())
);

CREATE TABLE "Departments" (
  "DepartmentID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" varchar NOT NULL,
  "Description" text,
  "ManagerID" integer,
  "CreatedAt" datetime DEFAULT (now()),
  "UpdatedAt" datetime DEFAULT (now())
);

CREATE TABLE "Roles" (
  "RoleID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "FaName" varchar,
  "EnName" varchar,
  "Description" text,
  "RoleType" varchar,
  "RoleLevel" integer,
  "IsActive" boolean DEFAULT true,
  "CreatedAt" datetime DEFAULT (now()),
  "UpdatedAt" datetime DEFAULT (now())
);

CREATE TABLE "Permissions" (
  "PermissionID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" varchar,
  "Description" text
);

CREATE TABLE "RolePermissions" (
  "RolePermissionID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "RoleID" integer,
  "PermissionID" integer
);

CREATE TABLE "Statuses" (
  "StatusID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" varchar,
  "Description" text,
  "Category" varchar,
  "ColorCode" varchar,
  "IsArchived" boolean
);

CREATE TABLE "Environments" (
  "EnvironmentID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" varchar,
  "Description" text,
  "IsArchived" boolean DEFAULT false
);

CREATE TABLE "LookupTypes" (
  "TypeID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" varchar,
  "Category" varchar,
  "IsArchived" boolean DEFAULT false
);

CREATE TABLE "LookupRiskLevels" (
  "RiskLevelID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" varchar,
  "IsArchived" boolean DEFAULT false
);

CREATE TABLE "LookupPriorities" (
  "PriorityID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" varchar,
  "IsArchived" boolean DEFAULT false
);

CREATE TABLE "LookupSeverity" (
  "SeverityID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" varchar,
  "IsArchived" boolean DEFAULT false
);

CREATE TABLE "Projects" (
  "ProjectID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" varchar,
  "Description" text,
  "StartDate" datetime,
  "EndDate" datetime,
  "StatusID" integer,
  "ProjectManagerID" integer,
  "RepositoryLink" text,
  "Visibility" varchar DEFAULT 'Private',
  "IsArchived" boolean,
  "CreatedAt" datetime DEFAULT (now()),
  "UpdatedAt" datetime DEFAULT (now())
);

CREATE TABLE "Sprints" (
  "SprintID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ProjectID" integer,
  "StatusID" integer,
  "Name" varchar,
  "Goal" text,
  "StartDate" datetime,
  "EndDate" datetime,
  "IsArchived" boolean DEFAULT false,
  "Description" text
);

CREATE TABLE "Tasks" (
  "TaskID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ParentID" integer,
  "ProjectID" integer,
  "SprintID" integer,
  "JiraID" varchar,
  "JiraLink" text,
  "TaskOwnerID" integer,
  "StakeHolderID" integer,
  "StartToDoDate" datetime,
  "EndToDoDate" datetime,
  "StartDevelopDate" datetime,
  "EndDevelopDate" datetime,
  "StartTestDate" datetime,
  "EndTestDate" datetime,
  "DueDate" datetime,
  "ReturnCount" integer DEFAULT 0,
  "StatusID" integer,
  "TypeID" integer,
  "RiskLevelID" integer,
  "PriorityID" integer,
  "EstimatedTime" decimal,
  "ActualTime" decimal,
  "StoryPoints" integer,
  "AcceptanceCriteria" text,
  "CodeRepositoryLink" text,
  "DocumentationLink" text,
  "Description" text,
  "IsArchived" boolean DEFAULT false,
  "CreatedAt" datetime DEFAULT (now()),
  "UpdatedAt" datetime DEFAULT (now())
);

CREATE TABLE "TestCases" (
  "TestCaseID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "TaskID" integer,
  "Title" varchar,
  "ExpectedResult" text,
  "Preconditions" text,
  "PriorityID" integer,
  "Steps" text,
  "Automated" boolean,
  "TestType" varchar,
  "AutomationScriptLink" text,
  "ExpectedDuration" decimal,
  "Description" text,
  "Tags" text,
  "LinkedBugID" integer,
  "IsArchived" boolean DEFAULT false,
  "CreatedAt" datetime DEFAULT (now()),
  "UpdatedAt" datetime DEFAULT (now())
);

CREATE TABLE "TestExecutions" (
  "ExecutionID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "TestCaseID" integer,
  "TesterID" integer,
  "ActualResult" text,
  "StatusID" integer,
  "ExecutionType" varchar,
  "ExecutionNotes" text,
  "BuildVersion" varchar,
  "DeviceBrowserInfo" text,
  "ExecutedAt" datetime DEFAULT (now()),
  "IsArchived" boolean DEFAULT false,
  "CreatedAt" datetime DEFAULT (now()),
  "UpdatedAt" datetime DEFAULT (now())
);

CREATE TABLE "Bugs" (
  "BugID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ExecutionID" integer,
  "Title" varchar,
  "Description" text,
  "StatusID" integer,
  "SeverityID" integer,
  "ReporterID" integer,
  "AssigneeID" integer,
  "StepsToReproduce" text,
  "EnvironmentID" integer,
  "DetectedInBuild" varchar,
  "FixedInBuild" varchar,
  "RootCause" text,
  "FixedVersion" varchar,
  "DueDate" datetime,
  "Resolution" varchar DEFAULT 'Unresolved',
  "IsReopened" boolean DEFAULT false,
  "IsArchived" boolean DEFAULT false,
  "CreatedAt" datetime DEFAULT (now()),
  "UpdatedAt" datetime DEFAULT (now())
);

CREATE TABLE "Releases" (
  "ReleaseID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "TaskID" integer,
  "Published" boolean DEFAULT false,
  "ReleaseName" varchar,
  "VersionNumber" varchar,
  "SprintID" integer,
  "EnvironmentID" integer,
  "ReleaseType" varchar,
  "DeploymentStatus" varchar,
  "ReleaseDate" datetime,
  "ReleaseTime" time,
  "RollbackDate" datetime,
  "Changelog" text,
  "Description" text,
  "CICDPipelineLink" text,
  "ApprovalStatus" varchar,
  "ApprovedBy" integer,
  "DeployedBy" integer,
  "IsArchived" boolean DEFAULT false,
  "CreatedAt" datetime DEFAULT (now()),
  "UpdatedAt" datetime DEFAULT (now())
);

CREATE TABLE "ReleaseBugs" (
  "ReleaseBugID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ReleaseID" integer,
  "BugID" integer
);

CREATE TABLE "ReleaseTestExecutions" (
  "ReleaseExecutionID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ReleaseID" integer,
  "ExecutionID" integer
);

CREATE TABLE "Attachments" (
  "AttachmentID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "RelatedTable" varchar,
  "RelatedID" integer,
  "FilePath" text,
  "FileType" varchar,
  "UploadedBy" integer,
  "UploadedAt" datetime DEFAULT (now())
);

CREATE TABLE "AuditLog" (
  "AuditID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "TableName" varchar,
  "RecordID" integer,
  "Action" varchar,
  "OldValue" text,
  "NewValue" text,
  "ChangedBy" integer,
  "ChangedAt" datetime DEFAULT (now())
);

CREATE UNIQUE INDEX ON "RolePermissions" ("RoleID", "PermissionID");

ALTER TABLE "Users" ADD FOREIGN KEY ("RoleID") REFERENCES "Roles" ("RoleID");

ALTER TABLE "Users" ADD FOREIGN KEY ("ProfileImageID") REFERENCES "Attachments" ("AttachmentID");

ALTER TABLE "Users" ADD FOREIGN KEY ("DepartmentID") REFERENCES "Departments" ("DepartmentID");

ALTER TABLE "Departments" ADD FOREIGN KEY ("ManagerID") REFERENCES "Users" ("UserID");

ALTER TABLE "RolePermissions" ADD FOREIGN KEY ("RoleID") REFERENCES "Roles" ("RoleID");

ALTER TABLE "RolePermissions" ADD FOREIGN KEY ("PermissionID") REFERENCES "Permissions" ("PermissionID");

ALTER TABLE "Projects" ADD FOREIGN KEY ("StatusID") REFERENCES "Statuses" ("StatusID");

ALTER TABLE "Projects" ADD FOREIGN KEY ("ProjectManagerID") REFERENCES "Users" ("UserID");

ALTER TABLE "Sprints" ADD FOREIGN KEY ("ProjectID") REFERENCES "Projects" ("ProjectID");

ALTER TABLE "Sprints" ADD FOREIGN KEY ("StatusID") REFERENCES "Statuses" ("StatusID");

ALTER TABLE "Tasks" ADD FOREIGN KEY ("ParentID") REFERENCES "Tasks" ("TaskID");

ALTER TABLE "Tasks" ADD FOREIGN KEY ("ProjectID") REFERENCES "Projects" ("ProjectID");

ALTER TABLE "Tasks" ADD FOREIGN KEY ("SprintID") REFERENCES "Sprints" ("SprintID");

ALTER TABLE "Tasks" ADD FOREIGN KEY ("TaskOwnerID") REFERENCES "Users" ("UserID");

ALTER TABLE "Tasks" ADD FOREIGN KEY ("StakeHolderID") REFERENCES "Users" ("UserID");

ALTER TABLE "Tasks" ADD FOREIGN KEY ("StatusID") REFERENCES "Statuses" ("StatusID");

ALTER TABLE "Tasks" ADD FOREIGN KEY ("TypeID") REFERENCES "LookupTypes" ("TypeID");

ALTER TABLE "Tasks" ADD FOREIGN KEY ("RiskLevelID") REFERENCES "LookupRiskLevels" ("RiskLevelID");

ALTER TABLE "Tasks" ADD FOREIGN KEY ("PriorityID") REFERENCES "LookupPriorities" ("PriorityID");

ALTER TABLE "TestCases" ADD FOREIGN KEY ("TaskID") REFERENCES "Tasks" ("TaskID");

ALTER TABLE "TestCases" ADD FOREIGN KEY ("PriorityID") REFERENCES "LookupPriorities" ("PriorityID");

ALTER TABLE "TestCases" ADD FOREIGN KEY ("LinkedBugID") REFERENCES "Bugs" ("BugID");

ALTER TABLE "TestExecutions" ADD FOREIGN KEY ("TestCaseID") REFERENCES "TestCases" ("TestCaseID");

ALTER TABLE "TestExecutions" ADD FOREIGN KEY ("TesterID") REFERENCES "Users" ("UserID");

ALTER TABLE "TestExecutions" ADD FOREIGN KEY ("StatusID") REFERENCES "Statuses" ("StatusID");

ALTER TABLE "Bugs" ADD FOREIGN KEY ("ExecutionID") REFERENCES "TestExecutions" ("ExecutionID");

ALTER TABLE "Bugs" ADD FOREIGN KEY ("StatusID") REFERENCES "Statuses" ("StatusID");

ALTER TABLE "Bugs" ADD FOREIGN KEY ("SeverityID") REFERENCES "LookupSeverity" ("SeverityID");

ALTER TABLE "Bugs" ADD FOREIGN KEY ("ReporterID") REFERENCES "Users" ("UserID");

ALTER TABLE "Bugs" ADD FOREIGN KEY ("AssigneeID") REFERENCES "Users" ("UserID");

ALTER TABLE "Bugs" ADD FOREIGN KEY ("EnvironmentID") REFERENCES "Environments" ("EnvironmentID");

ALTER TABLE "Releases" ADD FOREIGN KEY ("TaskID") REFERENCES "Tasks" ("TaskID");

ALTER TABLE "Releases" ADD FOREIGN KEY ("SprintID") REFERENCES "Sprints" ("SprintID");

ALTER TABLE "Releases" ADD FOREIGN KEY ("EnvironmentID") REFERENCES "Environments" ("EnvironmentID");

ALTER TABLE "Releases" ADD FOREIGN KEY ("ApprovedBy") REFERENCES "Users" ("UserID");

ALTER TABLE "Releases" ADD FOREIGN KEY ("DeployedBy") REFERENCES "Users" ("UserID");

ALTER TABLE "ReleaseBugs" ADD FOREIGN KEY ("ReleaseID") REFERENCES "Releases" ("ReleaseID");

ALTER TABLE "ReleaseBugs" ADD FOREIGN KEY ("BugID") REFERENCES "Bugs" ("BugID");

ALTER TABLE "ReleaseTestExecutions" ADD FOREIGN KEY ("ReleaseID") REFERENCES "Releases" ("ReleaseID");

ALTER TABLE "ReleaseTestExecutions" ADD FOREIGN KEY ("ExecutionID") REFERENCES "TestExecutions" ("ExecutionID");

ALTER TABLE "Attachments" ADD FOREIGN KEY ("UploadedBy") REFERENCES "Users" ("UserID");

ALTER TABLE "AuditLog" ADD FOREIGN KEY ("ChangedBy") REFERENCES "Users" ("UserID");

ALTER TABLE "RolePermissions" ADD FOREIGN KEY ("PermissionID") REFERENCES "Users" ("IsActive");

ALTER TABLE "Attachments" ADD FOREIGN KEY ("UploadedBy") REFERENCES "Users" ("LastPasswordChange");
